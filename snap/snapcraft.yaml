name: saber # you probably want to 'snapcraft register <name>'
base: core22 # the base snap is the execution environment for this snap
version: '0.11.1' # just for humans, typically '1.2+git' or '1.3.2'
summary: A cross-platform libre handwritten notes app # 79 char long summary
description: |
  A cross-platform libre handwritten notes app, available for Android, iOS, Linux, Windows, and the web!
grade: stable # must be 'stable' to release into candidate/stable channels
confinement: strict # use 'strict' once you have the right plugs and slots
license: GPL-3.0
compression: lzo
donation: https://github.com/sponsors/adil192
source-code: https://github.com/adil192/saber
issues: https://github.com/adil192/saber/issues
contact: soumyadeepghosh2004@zohomail.in
architectures:
  - build-on: amd64
    build-for: amd64

parts:
  rustup:
    plugin: nil
    build-packages: [wget]
    build-environment:
      - RUSTUP_HOME: $CRAFT_PART_INSTALL/usr/share/rust
      - CARGO_HOME: $CRAFT_PART_INSTALL/usr/share/rust
      - CARGO_BUILD_JOBS: $CRAFT_PARALLEL_BUILD_COUNT
    override-pull: |
      wget https://sh.rustup.rs -O $CRAFT_PART_SRC/rustup-init.sh
      chmod +x $CRAFT_PART_SRC/rustup-init.sh
    override-build: |
      $CRAFT_PART_SRC/rustup-init.sh -y --no-modify-path
      mkdir -p $CRAFT_PART_INSTALL/usr/bin
      for i in `ls $RUSTUP_HOME/bin/`; do
        ln -s ../share/rust/bin/$i $CRAFT_PART_INSTALL/usr/bin/$i
      done
    override-prime: |
      echo 'Skip Prime'
  desktop:
    after: [saber, flutter-git, rustup]
    source: .
    plugin: dump
  flutter-git:
    after: [rustup]
    source: https://github.com/flutter/flutter.git
    source-tag: 3.7.9 # run local/flutter/update-artifacts.sh [x.y.z]
    source-depth: 1
    plugin: nil
    override-build: |
      mkdir -p $CRAFT_PART_INSTALL/usr/bin
      mkdir -p $CRAFT_PART_INSTALL/usr/libexec
      cp -r $CRAFT_PART_SRC $CRAFT_PART_INSTALL/usr/libexec/flutter
      ln -s $CRAFT_PART_INSTALL/usr/libexec/flutter/bin/flutter $CRAFT_PART_INSTALL/usr/bin/flutter
      $CRAFT_PART_INSTALL/usr/bin/flutter doctor
    build-packages:
      - clang
      - cmake
      - curl
      - libgtk-3-dev
      - ninja-build
      - unzip
      - xz-utils
      - zip
    override-prime: ''
  saber:
    after: [flutter-git, rustup]
    source: https://github.com/adil192/saber.git
    source-type: git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION
    plugin: nil
    build-environemt:
      - RUSTUP_HOME: $CRAFT_STAGE/usr/share/rust
      - CARGO_HOME: $CRAFT_STAGE/usr/share/rust
      - CARGO_BUILD_JOBS: $CRAFT_PARALLEL_BUILD_COUNT
    #build-attributes: [enable-patchelf]
    build-packages:
      - jq
      - libsecret-1-dev
      - libjsoncpp-dev
    stage-packages:
      - libsecret-1-0
      - libjsoncpp25
      - zenity
    override-build: |
      set -eux
      flutter pub get || true
      flutter build linux --release
      mkdir -p $CRAFT_PART_INSTALL/bin
      cp -r build/linux/*/release/bundle/* $CRAFT_PART_INSTALL/bin/
  cleanup:
    after:  # Make this part run last; list all your other parts here
      - saber
    plugin: nil
    build-snaps:  # List all content-snaps and base snaps you're using here
      - core22
      - gnome-42-2204
      - gnome-42-2204-sdk
    override-prime: |
      set -eux
      for snap in "core22" "gnome-42-2204" "gnome-42-2204-sdk" ; do  # List all content-snaps and base snaps you're using here
        cd "/snap/$snap/current" && find . -type f,l -exec rm -f "$SNAPCRAFT_PRIME/{}" \;
      done

apps:
  saber:
    command: bin/saber
    desktop: snap/gui/saber.desktop
    extensions: [gnome]
    common-id: com.adilhanney.saber
    plugs:
      - home
      - network
      - network-status
